{"ast":null,"code":"var _jsxFileName = \"D:\\\\team20_reactjs\\\\Reactjs\\\\my-app\\\\src\\\\Assiginment\\\\Language Translation Tool.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function LanguageTranslationTool() {\n  _s();\n  const [LanguageTranslationTool] = useState({\n    sourcelanguage: \"english\",\n    targetlanguage: \"eng,tel\",\n    texttotranslate: function () {},\n    translatetext: function () {}\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: Object.keys(LanguageTranslationTool).map(key => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: LanguageTranslationTool[key]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 24\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 13\n  }, this);\n}\n_s(LanguageTranslationTool, \"y7a35eLTeLVWk3wcFS2griiQ1nw=\");\n_c = LanguageTranslationTool;\nvar _c;\n$RefreshReg$(_c, \"LanguageTranslationTool\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","LanguageTranslationTool","_s","sourcelanguage","targetlanguage","texttotranslate","translatetext","children","Object","keys","map","key","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/team20_reactjs/Reactjs/my-app/src/Assiginment/Language Translation Tool.jsx"],"sourcesContent":["import {useState} from \"react\";\r\n\r\nexport function LanguageTranslationTool(){\r\n    const [LanguageTranslationTool]=useState({\r\n        sourcelanguage:\"english\",\r\n        targetlanguage:\"eng,tel\",\r\n        texttotranslate:function(){ },\r\n        translatetext:function(){ }\r\n       \r\n\r\n    })\r\n    return (<div>\r\n        <ul>\r\n            {Object.keys(LanguageTranslationTool).map((key) => {\r\n                return <li>{LanguageTranslationTool[key]}</li>\r\n            })}\r\n        </ul>\r\n    </div>\r\n    )\r\n}\r\n"],"mappings":";;AAAA,SAAQA,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,OAAO,SAASC,uBAAuBA,CAAA,EAAE;EAAAC,EAAA;EACrC,MAAM,CAACD,uBAAuB,CAAC,GAACH,QAAQ,CAAC;IACrCK,cAAc,EAAC,SAAS;IACxBC,cAAc,EAAC,SAAS;IACxBC,eAAe,EAAC,SAAAA,CAAA,EAAU,CAAE,CAAC;IAC7BC,aAAa,EAAC,SAAAA,CAAA,EAAU,CAAE;EAG9B,CAAC,CAAC;EACF,oBAAQN,OAAA;IAAAO,QAAA,eACJP,OAAA;MAAAO,QAAA,EACKC,MAAM,CAACC,IAAI,CAACR,uBAAuB,CAAC,CAACS,GAAG,CAAEC,GAAG,IAAK;QAC/C,oBAAOX,OAAA;UAAAO,QAAA,EAAKN,uBAAuB,CAACU,GAAG;QAAC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAClD,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAACb,EAAA,CAjBeD,uBAAuB;AAAAe,EAAA,GAAvBf,uBAAuB;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}